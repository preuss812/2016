// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc812.BB9.commands;
import org.usfirst.frc812.BB9.RobotMap;


import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc812.BB9.Robot;

/**
 *
 */
public class AutonomousCommand extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public AutonomousCommand() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	RobotMap.driveTrainRobotDrive41.drive(0, 0);
    	RobotMap.driveTrainRobotDrive41.setExpiration(15.0);
    }
    
    Boolean isFin = false;

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	for (int i = 0; i < 4; i++) {
    		Robot.grabberSubsystem.closeGrabber();
    		try {
				Thread.sleep(1*1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
    		Robot.grabberSubsystem.openGrabber();
    	}
    	RobotMap.driveTrainRobotDrive41.drive(0.25, 0.0); // straight
    	try {
			Thread.sleep(10*1000);
   // 		for (int i = 0; i < Integer.MAX_VALUE; i ++) {
    //			RobotMap.driveTrainRobotDrive41.drive(0.25, 0.0);
    			//RobotMap.driveTrainRobotDrive41.wait(30);
//    		}
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	Robot.grabberSubsystem.closeGrabber();
    	isFin = true;
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return isFin;
    }

    // Called once after isFinished returns true
    protected void end() {
    	RobotMap.driveTrainRobotDrive41.drive(0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
